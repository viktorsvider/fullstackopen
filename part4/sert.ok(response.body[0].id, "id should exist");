
> part4@1.0.0 test
> cross-env NODE_ENV=test node --test

TAP version 13
# Subtest: blogs are returned as json
ok 1 - blogs are returned as json
  ---
  duration_ms: 2147.090428
  ...
# Subtest: unique property of blog post is named id not _id
ok 2 - unique property of blog post is named id not _id
  ---
  duration_ms: 811.430932
  ...
# Subtest: making HTTP POST creates a new blog post
ok 3 - making HTTP POST creates a new blog post
  ---
  duration_ms: 410.835508
  ...
# Subtest: if likes property is missing, it will default to 0
ok 4 - if likes property is missing, it will default to 0
  ---
  duration_ms: 409.643798
  ...
# Subtest: if likes property is missing, it will default to 0
ok 5 - if likes property is missing, it will default to 0
  ---
  duration_ms: 229.753712
  ...
# <ref *2> Response {
#   _events: [Object: null prototype] {},
#   _eventsCount: 0,
#   _maxListeners: undefined,
#   res: <ref *1> IncomingMessage {
#     _events: {
#       close: [Function: bound emit],
#       error: [Array],
#       data: [Array],
#       end: [Array],
#       readable: undefined
#     },
#     _readableState: ReadableState {
#       highWaterMark: 65536,
#       buffer: [],
#       bufferIndex: 0,
#       length: 0,
#       pipes: [],
#       awaitDrainWriters: null,
#       [Symbol(kState)]: 201070460,
#       [Symbol(kDecoderValue)]: [StringDecoder],
#       [Symbol(kEncodingValue)]: 'utf8'
#     },
#     _maxListeners: undefined,
#     socket: Socket {
#       connecting: false,
#       _hadError: false,
#       _parent: null,
#       _host: null,
#       _closeAfterHandlingError: false,
#       _events: [Object],
#       _readableState: [ReadableState],
#       _writableState: [WritableState],
#       allowHalfOpen: false,
#       _maxListeners: undefined,
#       _eventsCount: 7,
#       _sockname: null,
#       _pendingData: null,
#       _pendingEncoding: '',
#       server: null,
#       _server: null,
#       parser: null,
#       _httpMessage: [ClientRequest],
#       [Symbol(async_id_symbol)]: 6252,
#       [Symbol(kHandle)]: [TCP],
#       [Symbol(lastWriteQueueSize)]: 0,
#       [Symbol(timeout)]: null,
#       [Symbol(kBuffer)]: null,
#       [Symbol(kBufferCb)]: null,
#       [Symbol(kBufferGen)]: null,
#       [Symbol(shapeMode)]: true,
#       [Symbol(kCapture)]: false,
#       [Symbol(kSetNoDelay)]: true,
#       [Symbol(kSetKeepAlive)]: false,
#       [Symbol(kSetKeepAliveInitialDelay)]: 0,
#       [Symbol(kBytesRead)]: 0,
#       [Symbol(kBytesWritten)]: 0
#     },
#     httpVersionMajor: 1,
#     httpVersionMinor: 1,
#     httpVersion: '1.1',
#     complete: true,
#     rawHeaders: [
#       'X-Powered-By',
#       'Express',
#       'Access-Control-Allow-Origin',
#       '*',
#       'Content-Type',
#       'application/json; charset=utf-8',
#       'Content-Length',
#       '663',
#       'ETag',
#       'W/"297-uknHRcjfbLmYAY6iLC+v2DaTRcQ"',
#       'Date',
#       'Sun, 02 Feb 2025 21:51:19 GMT',
#       'Connection',
#       'close'
#     ],
#     rawTrailers: [],
#     joinDuplicateHeaders: undefined,
#     aborted: false,
#     upgrade: false,
#     url: '',
#     method: null,
#     statusCode: 200,
#     statusMessage: 'OK',
#     client: Socket {
#       connecting: false,
#       _hadError: false,
#       _parent: null,
#       _host: null,
#       _closeAfterHandlingError: false,
#       _events: [Object],
#       _readableState: [ReadableState],
#       _writableState: [WritableState],
#       allowHalfOpen: false,
#       _maxListeners: undefined,
#       _eventsCount: 7,
#       _sockname: null,
#       _pendingData: null,
#       _pendingEncoding: '',
#       server: null,
#       _server: null,
#       parser: null,
#       _httpMessage: [ClientRequest],
#       [Symbol(async_id_symbol)]: 6252,
#       [Symbol(kHandle)]: [TCP],
#       [Symbol(lastWriteQueueSize)]: 0,
#       [Symbol(timeout)]: null,
#       [Symbol(kBuffer)]: null,
#       [Symbol(kBufferCb)]: null,
#       [Symbol(kBufferGen)]: null,
#       [Symbol(shapeMode)]: true,
#       [Symbol(kCapture)]: false,
#       [Symbol(kSetNoDelay)]: true,
#       [Symbol(kSetKeepAlive)]: false,
#       [Symbol(kSetKeepAliveInitialDelay)]: 0,
#       [Symbol(kBytesRead)]: 0,
#       [Symbol(kBytesWritten)]: 0
#     },
#     _consuming: false,
#     _dumped: false,
#     req: ClientRequest {
#       _events: [Object: null prototype],
#       _eventsCount: 3,
#       _maxListeners: undefined,
#       outputData: [],
#       outputSize: 0,
#       writable: true,
#       destroyed: false,
#       _last: true,
#       chunkedEncoding: false,
#       shouldKeepAlive: false,
#       maxRequestsOnConnectionReached: false,
#       _defaultKeepAlive: true,
#       useChunkedEncodingByDefault: false,
#       sendDate: false,
#       _removedConnection: false,
#       _removedContLen: false,
#       _removedTE: false,
#       strictContentLength: false,
#       _contentLength: 0,
#       _hasBody: true,
#       _trailer: '',
#       finished: true,
#       _headerSent: true,
#       _closed: false,
#       _header: 'GET /api/blogs HTTP/1.1\\r\\n' +
#         'Host: 127.0.0.1:45035\\r\\n' +
#         'Accept-Encoding: gzip, deflate\\r\\n' +
#         'Connection: close\\r\\n' +
#         '\\r\\n',
#       _keepAliveTimeout: 0,
#       _onPendingData: [Function: nop],
#       agent: [Agent],
#       socketPath: undefined,
#       method: 'GET',
#       maxHeaderSize: undefined,
#       insecureHTTPParser: undefined,
#       joinDuplicateHeaders: undefined,
#       path: '/api/blogs',
#       _ended: true,
#       res: [Circular *1],
#       aborted: false,
#       timeoutCb: null,
#       upgradeOrConnect: false,
#       parser: null,
#       maxHeadersCount: null,
#       reusedSocket: false,
#       host: '127.0.0.1',
#       protocol: 'http:',
#       [Symbol(shapeMode)]: false,
#       [Symbol(kCapture)]: false,
#       [Symbol(kBytesWritten)]: 0,
#       [Symbol(kNeedDrain)]: false,
#       [Symbol(corked)]: 0,
#       [Symbol(kChunkedBuffer)]: [],
#       [Symbol(kChunkedLength)]: 0,
#       [Symbol(kSocket)]: [Socket],
#       [Symbol(kOutHeaders)]: [Object: null prototype],
#       [Symbol(errored)]: null,
#       [Symbol(kHighWaterMark)]: 65536,
#       [Symbol(kRejectNonStandardBodyWrites)]: false,
#       [Symbol(kUniqueHeaders)]: null
#     },
#     _eventsCount: 4,
#     text: '[{"title":"Landing Falcon Heavy on Mars","author":"Elon Musk","url":"spacex.com/blog/landing-on-mars","likes":1242,"id":"679fe8d6f02c94ed35b958d4"},{"title":"Borrow checker in Rust","author":"Guido van Rossum","url":"blog.rust.com/borrow-checker","likes":777,"id":"679fe8d6f02c94ed35b958d1"},{"title":"C++ 27 draft: semicolon overloading proposal","author":"Bjarne Stroustrup","url":"blog.cpp.com/cpp27draft","likes":12,"id":"679fe8d6f02c94ed35b958d3"},{"title":"Optional type in Rust comparing to functional languages","author":"Guido van Rossum","url":"blog.rust.com/optional-type-rust-comparing-to-functional-lang","likes":234,"id":"679fe8d6f02c94ed35b958d2"}]',
#     [Symbol(shapeMode)]: true,
#     [Symbol(kCapture)]: false,
#     [Symbol(kHeaders)]: {
#       'x-powered-by': 'Express',
#       'access-control-allow-origin': '*',
#       'content-type': 'application/json; charset=utf-8',
#       'content-length': '663',
#       etag: 'W/"297-uknHRcjfbLmYAY6iLC+v2DaTRcQ"',
#       date: 'Sun, 02 Feb 2025 21:51:19 GMT',
#       connection: 'close'
#     },
#     [Symbol(kHeadersCount)]: 14,
#     [Symbol(kTrailers)]: null,
#     [Symbol(kTrailersCount)]: 0
#   },
#   request: Test {
#     _events: [Object: null prototype] { abort: [Function (anonymous)] },
#     _eventsCount: 1,
#     _maxListeners: undefined,
#     _enableHttp2: false,
#     _agent: false,
#     _formData: null,
#     method: 'GET',
#     url: 'http://127.0.0.1:45035/api/blogs',
#     _header: {},
#     header: {},
#     writable: true,
#     _redirects: 0,
#     _maxRedirects: 0,
#     cookies: '',
#     qs: {},
#     _query: [],
#     qsRaw: [],
#     _redirectList: [],
#     _streamRequest: false,
#     _lookup: undefined,
#     _buffer: true,
#     app: Server {
#       maxHeaderSize: undefined,
#       insecureHTTPParser: undefined,
#       requestTimeout: 300000,
#       headersTimeout: 60000,
#       keepAliveTimeout: 5000,
#       connectionsCheckingInterval: 30000,
#       requireHostHeader: true,
#       joinDuplicateHeaders: undefined,
#       rejectNonStandardBodyWrites: false,
#       _events: [Object: null prototype],
#       _eventsCount: 3,
#       _maxListeners: undefined,
#       _connections: 0,
#       _handle: null,
#       _usingWorkers: false,
#       _workers: [],
#       _unref: false,
#       _listeningId: 25,
#       allowHalfOpen: true,
#       pauseOnConnect: false,
#       noDelay: true,
#       keepAlive: false,
#       keepAliveInitialDelay: 0,
#       highWaterMark: 65536,
#       httpAllowHalfOpen: false,
#       timeout: 0,
#       maxHeadersCount: null,
#       maxRequestsPerSocket: 0,
#       _connectionKey: '6::::0',
#       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
#       [Symbol(ServerResponse)]: [Function: ServerResponse],
#       [Symbol(shapeMode)]: false,
#       [Symbol(kCapture)]: false,
#       [Symbol(async_id_symbol)]: 6247,
#       [Symbol(kUniqueHeaders)]: null,
#       [Symbol(http.server.connections)]: ConnectionsList {},
#       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
#         _idleTimeout: -1,
#         _idlePrev: null,
#         _idleNext: null,
#         _idleStart: 5216,
#         _onTimeout: null,
#         _timerArgs: undefined,
#         _repeat: 30000,
#         _destroyed: true,
#         [Symbol(refed)]: false,
#         [Symbol(kHasPrimitive)]: false,
#         [Symbol(asyncId)]: 6256,
#         [Symbol(triggerId)]: 6248,
#         [Symbol(kAsyncContextFrame)]: undefined
#       }
#     },
#     _asserts: [],
#     _server: Server {
#       maxHeaderSize: undefined,
#       insecureHTTPParser: undefined,
#       requestTimeout: 300000,
#       headersTimeout: 60000,
#       keepAliveTimeout: 5000,
#       connectionsCheckingInterval: 30000,
#       requireHostHeader: true,
#       joinDuplicateHeaders: undefined,
#       rejectNonStandardBodyWrites: false,
#       _events: [Object: null prototype],
#       _eventsCount: 3,
#       _maxListeners: undefined,
#       _connections: 0,
#       _handle: null,
#       _usingWorkers: false,
#       _workers: [],
#       _unref: false,
#       _listeningId: 25,
#       allowHalfOpen: true,
#       pauseOnConnect: false,
#       noDelay: true,
#       keepAlive: false,
#       keepAliveInitialDelay: 0,
#       highWaterMark: 65536,
#       httpAllowHalfOpen: false,
#       timeout: 0,
#       maxHeadersCount: null,
#       maxRequestsPerSocket: 0,
#       _connectionKey: '6::::0',
#       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
#       [Symbol(ServerResponse)]: [Function: ServerResponse],
#       [Symbol(shapeMode)]: false,
#       [Symbol(kCapture)]: false,
#       [Symbol(async_id_symbol)]: 6247,
#       [Symbol(kUniqueHeaders)]: null,
#       [Symbol(http.server.connections)]: ConnectionsList {},
#       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
#         _idleTimeout: -1,
#         _idlePrev: null,
#         _idleNext: null,
#         _idleStart: 5216,
#         _onTimeout: null,
#         _timerArgs: undefined,
#         _repeat: 30000,
#         _destroyed: true,
#         [Symbol(refed)]: false,
#         [Symbol(kHasPrimitive)]: false,
#         [Symbol(asyncId)]: 6256,
#         [Symbol(triggerId)]: 6248,
#         [Symbol(kAsyncContextFrame)]: undefined
#       }
#     },
#     req: ClientRequest {
#       _events: [Object: null prototype],
#       _eventsCount: 3,
#       _maxListeners: undefined,
#       outputData: [],
#       outputSize: 0,
#       writable: true,
#       destroyed: false,
#       _last: true,
#       chunkedEncoding: false,
#       shouldKeepAlive: false,
#       maxRequestsOnConnectionReached: false,
#       _defaultKeepAlive: true,
#       useChunkedEncodingByDefault: false,
#       sendDate: false,
#       _removedConnection: false,
#       _removedContLen: false,
#       _removedTE: false,
#       strictContentLength: false,
#       _contentLength: 0,
#       _hasBody: true,
#       _trailer: '',
#       finished: true,
#       _headerSent: true,
#       _closed: false,
#       _header: 'GET /api/blogs HTTP/1.1\\r\\n' +
#         'Host: 127.0.0.1:45035\\r\\n' +
#         'Accept-Encoding: gzip, deflate\\r\\n' +
#         'Connection: close\\r\\n' +
#         '\\r\\n',
#       _keepAliveTimeout: 0,
#       _onPendingData: [Function: nop],
#       agent: [Agent],
#       socketPath: undefined,
#       method: 'GET',
#       maxHeaderSize: undefined,
#       insecureHTTPParser: undefined,
#       joinDuplicateHeaders: undefined,
#       path: '/api/blogs',
#       _ended: true,
#       res: [IncomingMessage],
#       aborted: false,
#       timeoutCb: null,
#       upgradeOrConnect: false,
#       parser: null,
#       maxHeadersCount: null,
#       reusedSocket: false,
#       host: '127.0.0.1',
#       protocol: 'http:',
#       [Symbol(shapeMode)]: false,
#       [Symbol(kCapture)]: false,
#       [Symbol(kBytesWritten)]: 0,
#       [Symbol(kNeedDrain)]: false,
#       [Symbol(corked)]: 0,
#       [Symbol(kChunkedBuffer)]: [],
#       [Symbol(kChunkedLength)]: 0,
#       [Symbol(kSocket)]: [Socket],
#       [Symbol(kOutHeaders)]: [Object: null prototype],
#       [Symbol(errored)]: null,
#       [Symbol(kHighWaterMark)]: 65536,
#       [Symbol(kRejectNonStandardBodyWrites)]: false,
#       [Symbol(kUniqueHeaders)]: null
#     },
#     protocol: 'http:',
#     host: '127.0.0.1:45035',
#     _endCalled: true,
#     _callback: [Function (anonymous)],
#     _fullfilledPromise: Promise {
#       [Circular *2],
#       [Symbol(async_id_symbol)]: 6251,
#       [Symbol(trigger_async_id_symbol)]: 6249
#     },
#     res: <ref *1> IncomingMessage {
#       _events: [Object],
#       _readableState: [ReadableState],
#       _maxListeners: undefined,
#       socket: [Socket],
#       httpVersionMajor: 1,
#       httpVersionMinor: 1,
#       httpVersion: '1.1',
#       complete: true,
#       rawHeaders: [Array],
#       rawTrailers: [],
#       joinDuplicateHeaders: undefined,
#       aborted: false,
#       upgrade: false,
#       url: '',
#       method: null,
#       statusCode: 200,
#       statusMessage: 'OK',
#       client: [Socket],
#       _consuming: false,
#       _dumped: false,
#       req: [ClientRequest],
#       _eventsCount: 4,
#       text: '[{"title":"Landing Falcon Heavy on Mars","author":"Elon Musk","url":"spacex.com/blog/landing-on-mars","likes":1242,"id":"679fe8d6f02c94ed35b958d4"},{"title":"Borrow checker in Rust","author":"Guido van Rossum","url":"blog.rust.com/borrow-checker","likes":777,"id":"679fe8d6f02c94ed35b958d1"},{"title":"C++ 27 draft: semicolon overloading proposal","author":"Bjarne Stroustrup","url":"blog.cpp.com/cpp27draft","likes":12,"id":"679fe8d6f02c94ed35b958d3"},{"title":"Optional type in Rust comparing to functional languages","author":"Guido van Rossum","url":"blog.rust.com/optional-type-rust-comparing-to-functional-lang","likes":234,"id":"679fe8d6f02c94ed35b958d2"}]',
#       [Symbol(shapeMode)]: true,
#       [Symbol(kCapture)]: false,
#       [Symbol(kHeaders)]: [Object],
#       [Symbol(kHeadersCount)]: 14,
#       [Symbol(kTrailers)]: null,
#       [Symbol(kTrailersCount)]: 0
#     },
#     _resBuffered: true,
#     response: [Circular *2],
#     called: true,
#     [Symbol(shapeMode)]: false,
#     [Symbol(kCapture)]: false
#   },
#   req: <ref *3> ClientRequest {
#     _events: [Object: null prototype] {
#       drain: [Function],
#       error: [Function (anonymous)],
#       finish: [Function: requestOnFinish]
#     },
#     _eventsCount: 3,
#     _maxListeners: undefined,
#     outputData: [],
#     outputSize: 0,
#     writable: true,
#     destroyed: false,
#     _last: true,
#     chunkedEncoding: false,
#     shouldKeepAlive: false,
#     maxRequestsOnConnectionReached: false,
#     _defaultKeepAlive: true,
#     useChunkedEncodingByDefault: false,
#     sendDate: false,
#     _removedConnection: false,
#     _removedContLen: false,
#     _removedTE: false,
#     strictContentLength: false,
#     _contentLength: 0,
#     _hasBody: true,
#     _trailer: '',
#     finished: true,
#     _headerSent: true,
#     _closed: false,
#     _header: 'GET /api/blogs HTTP/1.1\\r\\n' +
#       'Host: 127.0.0.1:45035\\r\\n' +
#       'Accept-Encoding: gzip, deflate\\r\\n' +
#       'Connection: close\\r\\n' +
#       '\\r\\n',
#     _keepAliveTimeout: 0,
#     _onPendingData: [Function: nop],
#     agent: Agent {
#       _events: [Object: null prototype],
#       _eventsCount: 2,
#       _maxListeners: undefined,
#       defaultPort: 80,
#       protocol: 'http:',
#       options: [Object: null prototype],
#       requests: [Object: null prototype] {},
#       sockets: [Object: null prototype],
#       freeSockets: [Object: null prototype] {},
#       keepAliveMsecs: 1000,
#       keepAlive: false,
#       maxSockets: Infinity,
#       maxFreeSockets: 256,
#       scheduling: 'lifo',
#       maxTotalSockets: Infinity,
#       totalSocketCount: 1,
#       [Symbol(shapeMode)]: false,
#       [Symbol(kCapture)]: false
#     },
#     socketPath: undefined,
#     method: 'GET',
#     maxHeaderSize: undefined,
#     insecureHTTPParser: undefined,
#     joinDuplicateHeaders: undefined,
#     path: '/api/blogs',
#     _ended: true,
#     res: <ref *1> IncomingMessage {
#       _events: [Object],
#       _readableState: [ReadableState],
#       _maxListeners: undefined,
#       socket: [Socket],
#       httpVersionMajor: 1,
#       httpVersionMinor: 1,
#       httpVersion: '1.1',
#       complete: true,
#       rawHeaders: [Array],
#       rawTrailers: [],
#       joinDuplicateHeaders: undefined,
#       aborted: false,
#       upgrade: false,
#       url: '',
#       method: null,
#       statusCode: 200,
#       statusMessage: 'OK',
#       client: [Socket],
#       _consuming: false,
#       _dumped: false,
#       req: [Circular *3],
#       _eventsCount: 4,
#       text: '[{"title":"Landing Falcon Heavy on Mars","author":"Elon Musk","url":"spacex.com/blog/landing-on-mars","likes":1242,"id":"679fe8d6f02c94ed35b958d4"},{"title":"Borrow checker in Rust","author":"Guido van Rossum","url":"blog.rust.com/borrow-checker","likes":777,"id":"679fe8d6f02c94ed35b958d1"},{"title":"C++ 27 draft: semicolon overloading proposal","author":"Bjarne Stroustrup","url":"blog.cpp.com/cpp27draft","likes":12,"id":"679fe8d6f02c94ed35b958d3"},{"title":"Optional type in Rust comparing to functional languages","author":"Guido van Rossum","url":"blog.rust.com/optional-type-rust-comparing-to-functional-lang","likes":234,"id":"679fe8d6f02c94ed35b958d2"}]',
#       [Symbol(shapeMode)]: true,
#       [Symbol(kCapture)]: false,
#       [Symbol(kHeaders)]: [Object],
#       [Symbol(kHeadersCount)]: 14,
#       [Symbol(kTrailers)]: null,
#       [Symbol(kTrailersCount)]: 0
#     },
#     aborted: false,
#     timeoutCb: null,
#     upgradeOrConnect: false,
#     parser: null,
#     maxHeadersCount: null,
#     reusedSocket: false,
#     host: '127.0.0.1',
#     protocol: 'http:',
#     [Symbol(shapeMode)]: false,
#     [Symbol(kCapture)]: false,
#     [Symbol(kBytesWritten)]: 0,
#     [Symbol(kNeedDrain)]: false,
#     [Symbol(corked)]: 0,
#     [Symbol(kChunkedBuffer)]: [],
#     [Symbol(kChunkedLength)]: 0,
#     [Symbol(kSocket)]: Socket {
#       connecting: false,
#       _hadError: false,
#       _parent: null,
#       _host: null,
#       _closeAfterHandlingError: false,
#       _events: [Object],
#       _readableState: [ReadableState],
#       _writableState: [WritableState],
#       allowHalfOpen: false,
#       _maxListeners: undefined,
#       _eventsCount: 7,
#       _sockname: null,
#       _pendingData: null,
#       _pendingEncoding: '',
#       server: null,
#       _server: null,
#       parser: null,
#       _httpMessage: [Circular *3],
#       [Symbol(async_id_symbol)]: 6252,
#       [Symbol(kHandle)]: [TCP],
#       [Symbol(lastWriteQueueSize)]: 0,
#       [Symbol(timeout)]: null,
#       [Symbol(kBuffer)]: null,
#       [Symbol(kBufferCb)]: null,
#       [Symbol(kBufferGen)]: null,
#       [Symbol(shapeMode)]: true,
#       [Symbol(kCapture)]: false,
#       [Symbol(kSetNoDelay)]: true,
#       [Symbol(kSetKeepAlive)]: false,
#       [Symbol(kSetKeepAliveInitialDelay)]: 0,
#       [Symbol(kBytesRead)]: 0,
#       [Symbol(kBytesWritten)]: 0
#     },
#     [Symbol(kOutHeaders)]: [Object: null prototype] {
#       host: [Array],
#       'accept-encoding': [Array]
#     },
#     [Symbol(errored)]: null,
#     [Symbol(kHighWaterMark)]: 65536,
#     [Symbol(kRejectNonStandardBodyWrites)]: false,
#     [Symbol(kUniqueHeaders)]: null
#   },
#   text: '[{"title":"Landing Falcon Heavy on Mars","author":"Elon Musk","url":"spacex.com/blog/landing-on-mars","likes":1242,"id":"679fe8d6f02c94ed35b958d4"},{"title":"Borrow checker in Rust","author":"Guido van Rossum","url":"blog.rust.com/borrow-checker","likes":777,"id":"679fe8d6f02c94ed35b958d1"},{"title":"C++ 27 draft: semicolon overloading proposal","author":"Bjarne Stroustrup","url":"blog.cpp.com/cpp27draft","likes":12,"id":"679fe8d6f02c94ed35b958d3"},{"title":"Optional type in Rust comparing to functional languages","author":"Guido van Rossum","url":"blog.rust.com/optional-type-rust-comparing-to-functional-lang","likes":234,"id":"679fe8d6f02c94ed35b958d2"}]',
#   files: undefined,
#   buffered: true,
#   headers: {
#     'x-powered-by': 'Express',
#     'access-control-allow-origin': '*',
#     'content-type': 'application/json; charset=utf-8',
#     'content-length': '663',
#     etag: 'W/"297-uknHRcjfbLmYAY6iLC+v2DaTRcQ"',
#     date: 'Sun, 02 Feb 2025 21:51:19 GMT',
#     connection: 'close'
#   },
#   header: {
#     'x-powered-by': 'Express',
#     'access-control-allow-origin': '*',
#     'content-type': 'application/json; charset=utf-8',
#     'content-length': '663',
#     etag: 'W/"297-uknHRcjfbLmYAY6iLC+v2DaTRcQ"',
#     date: 'Sun, 02 Feb 2025 21:51:19 GMT',
#     connection: 'close'
#   },
#   statusCode: 200,
#   status: 200,
#   statusType: 2,
#   info: false,
#   ok: true,
#   redirect: false,
#   clientError: false,
#   serverError: false,
#   error: false,
#   created: false,
#   accepted: false,
#   noContent: false,
#   badRequest: false,
#   unauthorized: false,
#   notAcceptable: false,
#   forbidden: false,
#   notFound: false,
#   unprocessableEntity: false,
#   type: 'application/json',
#   charset: 'utf-8',
#   links: {},
#   setEncoding: [Function: bound ],
#   redirects: [],
#   _body: [
#     {
#       title: 'Landing Falcon Heavy on Mars',
#       author: 'Elon Musk',
#       url: 'spacex.com/blog/landing-on-mars',
#       likes: 1242,
#       id: '679fe8d6f02c94ed35b958d4'
#     },
#     {
#       title: 'Borrow checker in Rust',
#       author: 'Guido van Rossum',
#       url: 'blog.rust.com/borrow-checker',
#       likes: 777,
#       id: '679fe8d6f02c94ed35b958d1'
#     },
#     {
#       title: 'C++ 27 draft: semicolon overloading proposal',
#       author: 'Bjarne Stroustrup',
#       url: 'blog.cpp.com/cpp27draft',
#       likes: 12,
#       id: '679fe8d6f02c94ed35b958d3'
#     },
#     {
#       title: 'Optional type in Rust comparing to functional languages',
#       author: 'Guido van Rossum',
#       url: 'blog.rust.com/optional-type-rust-comparing-to-functional-lang',
#       likes: 234,
#       id: '679fe8d6f02c94ed35b958d2'
#     }
#   ],
#   pipe: [Function (anonymous)],
#   [Symbol(shapeMode)]: false,
#   [Symbol(kCapture)]: false
# }
# Subtest: delete blog post
not ok 6 - delete blog post
  ---
  duration_ms: 386.3557
  location: '/home/vik/code/fullstackopen/part4/tests/blog_api.test.js:100:1'
  failureType: 'testCodeFailure'
  error: 'The "urlObject" argument must be one of type object or string. Received undefined'
  code: 'ERR_INVALID_ARG_TYPE'
  name: 'TypeError'
  stack: |-
    urlFormat (node:url:581:11)
    new Request (/home/vik/code/fullstackopen/part4/node_modules/superagent/lib/node/index.js:150:38)
    new Test (/home/vik/code/fullstackopen/part4/node_modules/supertest/lib/test.js:26:5)
    obj.<computed> (/home/vik/code/fullstackopen/part4/node_modules/supertest/index.js:43:18)
    TestContext.<anonymous> (/home/vik/code/fullstackopen/part4/tests/blog_api.test.js:107:33)
    process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    async Test.run (node:internal/test_runner/test:932:9)
    async Test.processPendingSubtests (node:internal/test_runner/test:629:7)
  ...
# Subtest: dummy returns one
ok 7 - dummy returns one
  ---
  duration_ms: 1.430424
  ...
# Subtest: total likes
    # Subtest: when list is void should return zero
    ok 1 - when list is void should return zero
      ---
      duration_ms: 0.945116
      ...
    # Subtest: when list has one blog that one is favourite
    ok 2 - when list has one blog that one is favourite
      ---
      duration_ms: 0.481709
      ...
    # Subtest: when list has multiple blogs, equals the sum of likes for all
    ok 3 - when list has multiple blogs, equals the sum of likes for all
      ---
      duration_ms: 0.61181
      ...
    # Subtest: favourite blog
        # Subtest: when list is void should return null
        ok 1 - when list is void should return null
          ---
          duration_ms: 1.762631
          ...
        # Subtest: when list has only one blog, return that blog
        ok 2 - when list has only one blog, return that blog
          ---
          duration_ms: 0.647511
          ...
        # Subtest: when list has multiple blogs, return one with most likes
        ok 3 - when list has multiple blogs, return one with most likes
          ---
          duration_ms: 0.911116
          ...
        1..3
    ok 4 - favourite blog
      ---
      duration_ms: 4.308974
      type: 'suite'
      ...
    # Subtest: most liked author
        # Subtest: when list is void should return null
        ok 1 - when list is void should return null
          ---
          duration_ms: 3.810166
          ...
        # Subtest: when list has only one blog, return likes and author of that blog
        ok 2 - when list has only one blog, return likes and author of that blog
          ---
          duration_ms: 1.573427
          ...
        # Subtest: when list has multiple blogs, return author with most likes
        ok 3 - when list has multiple blogs, return author with most likes
          ---
          duration_ms: 4.512278
          ...
        1..3
    ok 5 - most liked author
      ---
      duration_ms: 10.858187
      type: 'suite'
      ...
    1..5
ok 8 - total likes
  ---
  duration_ms: 18.874325
  type: 'suite'
  ...
1..8
# tests 16
# suites 3
# pass 15
# fail 1
# cancelled 0
# skipped 0
# todo 0
# duration_ms 5495.071754
